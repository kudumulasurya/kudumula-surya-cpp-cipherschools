#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

// Linear Search Algorithm
int linearSearch(vector<int>& arr, int target) {
    for (int i = 0; i < arr.size(); i++) {
        if (arr[i] == target) {
            return i; // Return the index of the target element
        }
    }
    return -1; // Target element not found
}

// Binary Search Algorithm
int binarySearch(vector<int>& arr, int target) {
    int left = 0;
    int right = arr.size() - 1;

    while (left <= right) {
        int mid = left + (right - left) / 2;
        if (arr[mid] == target) {
            return mid; // Return the index of the target element
        } else if (arr[mid] < target) {
            left = mid + 1; // Search the right half
        } else {
            right = mid - 1; // Search the left half
        }
    }

    return -1; // Target element not found
}

int main() {
    // Example usage of the search algorithms
    vector<int> numbers = {5, 10, 15, 20, 25, 30, 35, 40, 45, 50};

    // Linear Search
    int target1 = 25;
    int index1 = linearSearch(numbers, target1);
    if (index1 != -1) {
        cout << "Linear Search: " << target1 << " found at index " << index1 << endl;
    } else {
        cout << "Linear Search: " << target1 << " not found" << endl;
    }

    // Binary Search
    int target2 = 30;
    int index2 = binarySearch(numbers, target2);
    if (index2 != -1) {
        cout << "Binary Search: " << target2 << " found at index " << index2 << endl;
    } else {
        cout << "Binary Search: " << target2 << " not found" << endl;
    }

    return 0;
}