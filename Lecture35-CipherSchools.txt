//1 Stack:- 

#include<iostream>
#include<stack>
using namespace std;

int main()
{
    stack<int> a;

    a.push(5);
    a.push(6);
    a.push(7);

    cout<a.top()<<endl;
    
    a.pop();

    cout<<a.top()<<emdl;
}

//2 

#include<iostream>
#include<stack>
using namespace std;

int main()
{
    stack<int> a;

    a.push(5);
    a.push(6);
    a.push(7);

    cout<a.top()<<endl;

    a.pop();

    cout<<a.top()<<emdl;

    if(a.empty()==0)
    {
        cout<<"The stack is currently not empty";
    }
    else
    {
        cout<<"The stack is empty";
    }
    a.pop();
    a.pop();
    if(a.empty()==0)
    {
        cout<<"The stack is currently not empty";
    }
    else
    {
        cout<<"The stack is empty";
    }
}

//3 Queue:- 

#include<iostream>
#include<queue>
using namespace std;

int main()
{
    queue<int> a;

    a.push(5);
    a.push(6);
    a.push(7);

    //  7 6 5

    cout<a.front()<<endl;

    a.pop();

    cout<<a.back()<<emdl;

    if(a.empty()==0)
    {
        cout<<"The stack is currently not empty";
    }
    else
    {
        cout<<"The stack is empty";
    }
    a.pop();
    a.pop();
    if(a.empty()==0)
    {
        cout<<"The stack is currently not empty";
    }
    else
    {
        cout<<"The stack is empty";
    }
}

//4 Map:- 

#include<iostream>
#include<map>
using namespace std;

int main()
{
    map<string,int> hash;

    hash["rohit"] = 1;
    hash["programming"] = 2;
    hash["reddy"] = 3;

    cout<<"The value of rohiy in the hashtable is "<<hash["rohit"]<<endl;

    cout<<"The value of rohiy in the hashtable is "<<hash["programming"]<<endl;

    cout<<"The value of rohiy in the hashtable is "<<hash["c++"]<<endl;

    for(auto j = hash.begin(); j!=hash.end;j++)
    {
        cout<<"the key will be "<<j->first<<" The value in the key will be "<<j->second<<endl;
    }
}

//5 List:- 

#include<iostream>
#include<list>
using namespace std;

int main()
{
    list<int> a;

    a.push_back(4);
    a.push_front(2);
    a.push_back(3);
    a.push_front(2);

    a.pop_back();
    a.pop_back();

    a.sort();

    for(auto i=a.begin();i!=a.end();i++)
    {
        cout<<*i;
    }
}
